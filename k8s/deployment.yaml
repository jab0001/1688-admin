---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $APP_NAME
  labels:
    app: $APP_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app: $APP_NAME
  template:
    metadata:
      labels:
        app: $APP_NAME
        date: $DEPLOYMENT_DATE
    spec:
      imagePullSecrets:
      - name: regcred
      containers:
      - name: $APP_NAME
        image: $DOCKER_IMAGE_NAME:$CI_ENVIRONMENT_NAME
        imagePullPolicy: Always
        ports:
          - name: "http"
            containerPort: 80
      nodeSelector:
        selector: "worker"
---
apiVersion: v1
kind: Service
metadata:
  name: svc-$APP_NAME
  labels:
    app: $APP_NAME
    date: $DEPLOYMENT_DATE
spec:
  selector:
    app: $APP_NAME
  type: ClusterIP
  ports:
    - name: http
      port: 80
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt
  namespace: cert-manager
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: ryuhmanov.m@flgchina.ru
    privateKeySecretRef:
      name: letsencrypt-$APP_NAME
    solvers:
    - http01:
        ingress:
          class: nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $APP_NAME
  labels:
    app: $APP_NAME
    date: $DEPLOYMENT_DATE
  annotations:
  #  nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/backend-protocol: http
  #  kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt"

spec:
  tls:
    - hosts:
      - $INGRESS_SUBDOMAIN$INGRESS_HOST
      secretName: letsencrypt-$APP_NAME
  ingressClassName: nginx
  rules:
  - host: $INGRESS_SUBDOMAIN$INGRESS_HOST
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: svc-$APP_NAME
            port:
              number: 80
